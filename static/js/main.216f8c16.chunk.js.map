{"version":3,"sources":["Components/Navbar.js","Components/TextArea.js","Components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_useState","useState","_useState2","Object","slicedToArray","currentPgIsHome","setCurrentPgIsHome","_useState3","_useState4","currentPageIsContact","setCurrentPgIsContact","location","useLocation","useEffect","window","pathname","react_default","a","createElement","Fragment","style","darkLightModeNav","onClick","clicking","className","darkLightModeText","react_router_dom","to","objectSpread","textDecoration","type","aria-label","htmlFor","enableDarkModeOnClick","backgroundColorDarkMode","transitionCircle","darkLightModeTextNav","TextArea","text","updateText","numberOfCharacters","updateNumberOfCharacters","_useState5","_useState6","numberOfWords","updateNumberOfWords","id","placeholder","value","onInput","e","target","split","join","length","filter","words","toUpperCase","backgroundColorButton","toLowerCase","navigator","clipboard","writeText","readText","then","txt","textAreaColor","Contact","contactUsMsg","updateContactUsMsg","name","onChange","App","modeEnabled","textModeEnabled","modeTextNav","translateXValue","labelBackgroundColor","btnBgColor","textColor","contactPgUnderline","state","setState","Navbar_Navbar","document","body","backgroundColor","color","transform","concat","currentPgIsContact","react_router","path","element","TextArea_TextArea","Contact_Contact","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.216f8c16.chunk.js","sourcesContent":["\r\nimport \"./Navbar.css\"\r\nimport React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\"\r\n\r\nexport default function Navbar(props) {\r\n    const [currentPgIsHome, setCurrentPgIsHome] = useState(\"none\")\r\n    const [currentPageIsContact, setCurrentPgIsContact] = useState(\"none\")\r\n\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (window.location.pathname === \"/Text-Analyzer\"){\r\n            setCurrentPgIsHome(\"underline\")\r\n            setCurrentPgIsContact(\"none\")\r\n        }\r\n        else if (window.location.pathname === \"/contact\"){\r\n            setCurrentPgIsContact(\"underline\")\r\n            setCurrentPgIsHome(\"none\")\r\n        }\r\n      }, [location]);\r\n        \r\n\r\n    return (\r\n        <>\r\n            <nav style={props.darkLightModeNav} onClick={props.clicking}>\r\n                <section className=\"rightSideNav\">\r\n                    <h1 style={props.darkLightModeText}>Text Tool Services</h1>\r\n                    <div className=\"about\">\r\n                        <Link to=\"/Text-Analyzer\" style={{textDecoration: currentPgIsHome, ...props.darkLightModeText}}>Home</Link>\r\n                    </div>\r\n                    <div className=\"contacts\">\r\n                        <Link to=\"/contact\" style={{textDecoration: currentPageIsContact, ...props.darkLightModeText}}>Contact Us</Link>\r\n                    </div>\r\n                </section>\r\n                <section className=\"leftSideNav\">\r\n                    <input type=\"checkbox\" className=\"dark-light-mode-checkbox\" aria-label=\"Choose to enable dark or light mode\" />\r\n                    <label htmlFor=\"dark-light-mode-label\" className=\"dark-light-mode-toggle-label\" onClick={props.enableDarkModeOnClick} style={props.backgroundColorDarkMode}>\r\n                        <div className=\"dark-light-mode-enabled-circle\" style={props.transitionCircle}></div>\r\n                    </label>\r\n                    <h4 style={props.darkLightModeText}>Enable {props.darkLightModeTextNav} Mode</h4>\r\n                </section>\r\n            </nav>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport \"./TextArea.css\";\r\n\r\nexport default function TextArea(props) {\r\n    const [text, updateText] = useState(\"\")\r\n    let [numberOfCharacters, updateNumberOfCharacters] = useState(0)\r\n    let [numberOfWords, updateNumberOfWords] = useState(0)\r\n    let onChangeHandle = (e) => {\r\n        updateText(e.target.value)\r\n        updateNumberOfCharacters(e.target.value.split(\" \").join(\"\").length)\r\n        updateNumberOfWords(e.target.value.split(\" \").filter(words => words !== \"\").length)\r\n    }\r\n    let clickToUpperCase = () => {\r\n        updateText(text.toUpperCase());\r\n    }\r\n    let clickToLowerCase = () => {\r\n        updateText(text.toLowerCase());\r\n    }\r\n    let clickToClear=()=>{\r\n        updateText(\"\")\r\n        updateNumberOfCharacters(0)\r\n        updateNumberOfWords(0)\r\n    }\r\n    let clickToCopy=()=>{\r\n        navigator.clipboard.writeText(text)\r\n    }\r\n    let clickToPaste=()=>{\r\n        navigator.clipboard.readText().then((txt)=>{\r\n        updateText(txt);\r\n        updateNumberOfCharacters(txt.split(\" \").join(\"\").length)\r\n        updateNumberOfWords(txt.split(\" \").filter(words => words !== \"\").length)\r\n    });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <strong>Playing with the text</strong>\r\n                <label htmlFor=\"text-area\"></label>\r\n                <textarea id=\"text-area\" placeholder=\"Enter your Text\" value={text} onInput={onChangeHandle}></textarea>\r\n                <div className=\"buttons\">\r\n                    <button onClick={clickToUpperCase} style={props.backgroundColorButton}>Click to change to UpperCase</button>\r\n                    <button onClick={clickToLowerCase} style={props.backgroundColorButton}>Click to change to LowerCase</button>\r\n                    <button onClick={clickToClear} style={props.backgroundColorButton}>Clear All</button>\r\n                    <button onClick={clickToCopy} style={props.backgroundColorButton}>Copy</button>\r\n                    <button onClick={clickToPaste} style={props.backgroundColorButton}>Paste</button>\r\n                </div>\r\n                <div className=\"numberOfWords\">\r\n                    <h3 style={props.textAreaColor}>The Number of Characters are <span>{numberOfCharacters}</span> and the Number of Words are <span>{numberOfWords}</span></h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport \"./Contact.css\"\r\n\r\n\r\nexport default function Contact(props) {\r\n  const [contactUsMsg, updateContactUsMsg] = useState(\"\")\r\n  let onChangeHandle=(e)=>{\r\n    updateContactUsMsg(e.target.value)\r\n  }\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <h1>Contact Us</h1>\r\n      <p style={props.textAreaColor}>Need additional information, want to report a defect or have a question or comment? Use below form or email us at contact us <code>@texttools.services</code> to share your feedbacks and experience about our services.</p>\r\n      <div className=\"contact-details\">\r\n        <div className=\"name-container\">\r\n          <label htmlFor=\"name-input\" style={props.textAreaColor}>Name: </label>\r\n          <input type=\"text\" id=\"name-input\" placeholder=\"Enter your Name\" name=\"name\" />\r\n        </div>\r\n        <div className=\"email-container\">\r\n          <label htmlFor=\"email-input\" style={props.textAreaColor}>Email: </label>\r\n          <input type=\"email\" id=\"email-input\" placeholder=\"Enter your Email\" name=\"email\" />\r\n        </div>\r\n        <div className=\"textarea-container\">\r\n          <label htmlFor=\"text-area-contact\"></label>\r\n          <textarea id=\"text-area-contact\" placeholder=\"Enter your Message\" value={contactUsMsg} onChange={onChangeHandle}></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react'\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\n\n\n\nfunction App() {\n    \n    const [state, setState] = useState({\n      modeEnabled: \"#1F2633\",\n      textModeEnabled: 'white',\n      modeTextNav: 'Dark',\n      translateXValue: '0px',\n      labelBackgroundColor: '#c5d1dc84',\n      btnBgColor: 'green',\n      textColor: \"black\",\n      contactPgUnderline: \"none\",\n    })\n\n  const enableDarkModeOnClick = () => {\n\n    if (state.modeEnabled === \"#1F2633\") {\n      document.body.style.backgroundColor = \"#1F2633\"\n      setState({ modeEnabled: \"rgb(185, 192, 198)\", textModeEnabled: \"black\", modeTextNav: \"Light\", translateXValue: \"+70%\", btnBgColor: \"rgb(185, 192, 198)\", textColor: \"white\", labelBackgroundColor: \"#00D1FF\" })\n    }\n    else {\n      document.body.style.backgroundColor = \"white\"\n      setState({ modeEnabled: \"#1F2633\", textModeEnabled: \"white\", modeTextNav: \"Dark\", translateXValue: \"0px\", btnBgColor: \"green\", textColor: \"black\", labelBackgroundColor: \"#c5d1dc84\" })\n    }\n\n  }\n\n\n  return (\n    <>\n      <Navbar enableDarkModeOnClick={enableDarkModeOnClick} darkLightModeNav={{ backgroundColor: state.modeEnabled }} darkLightModeTextNav={state.modeTextNav} darkLightModeText={{ color: state.textModeEnabled }} transitionCircle={{ transform: `translateX( ${state.translateXValue} )` }} backgroundColorDarkMode={{ backgroundColor: state.labelBackgroundColor }} currentPgIsContact={{textDecoration : state.contactPgUnderline}} />\n      <Routes>\n        <Route path=\"/Text-Analyzer\" element={<TextArea backgroundColorButton={{ backgroundColor: state.btnBgColor, color: state.textModeEnabled }} textAreaColor={{ color: state.textColor }} />}>\n        </Route>\n        <Route path=\"/contact\" element={<Contact textAreaColor={{ color: state.textColor }} />}>\n        </Route>\n      </Routes>\n    </>\n  );\n  \n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}