{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [modeEnabled, updateModeEnabled] = useState(\"black\");\n  const [textModeEnabled, updateTextModeEnabled] = useState(\"white\");\n  const [modeTextNav, updateModeTextNav] = useState(\"Dark\");\n  const [translateXValue, updateTranslateXValue] = useState(\"0px\");\n  const [labelBackgroundColor, updateLabelBackgroundColor] = useState(\"#c5d1dc84\");\n\n  const enableDarkModeOnClick = () => {\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n    switch (modeEnabled) {\n      case \"black\":\n        updateModeEnabled(\"white\");\n        updateTextModeEnabled(\"black\");\n        updateModeTextNav(\"Light\");\n        updateTranslateXValue(\"+70%\");\n        updateLabelBackgroundColor(\"linear gradient(to left, #0085FF, #00D1FF\");\n        break;\n\n      default:\n        updateModeEnabled(\"black\");\n        updateTextModeEnabled(\"white\");\n        updateModeTextNav(\"Dark\");\n        updateTranslateXValue(\"0px\");\n        updateLabelBackgroundColor(\"#c5d1dc84\");\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      enableDarkModeOnClick: enableDarkModeOnClick,\n      darkLightModeNav: {\n        backgroundColor: modeEnabled\n      },\n      darkLightModeTextNav: modeTextNav,\n      darkLightModeText: {\n        color: textModeEnabled\n      },\n      transitionCircle: {\n        transform: `translateX( ${translateXValue} )`\n      },\n      backgroundColorDarkMode: {\n        background: labelBackgroundColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"muFkGstIQ0eI5sXulOm02i1L8m0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextArea","React","useState","App","modeEnabled","updateModeEnabled","textModeEnabled","updateTextModeEnabled","modeTextNav","updateModeTextNav","translateXValue","updateTranslateXValue","labelBackgroundColor","updateLabelBackgroundColor","enableDarkModeOnClick","backgroundColor","color","transform","background"],"sources":["D:/Programming/js-react/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react'\n\n\nfunction App() {\n  const [modeEnabled, updateModeEnabled] = useState(\"black\")\n  const [textModeEnabled, updateTextModeEnabled] = useState(\"white\")\n  const [modeTextNav, updateModeTextNav] = useState(\"Dark\")\n  const [translateXValue, updateTranslateXValue] = useState(\"0px\")\n  const [labelBackgroundColor, updateLabelBackgroundColor] = useState(\"#c5d1dc84\")\n  \n  \n\n  const enableDarkModeOnClick = () => {\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n\n    switch (modeEnabled) {\n      case \"black\":\n        updateModeEnabled(\"white\")\n        updateTextModeEnabled(\"black\")\n        updateModeTextNav(\"Light\")\n        updateTranslateXValue(\"+70%\")\n        updateLabelBackgroundColor(\"linear gradient(to left, #0085FF, #00D1FF\")\n        break;\n      default:\n        updateModeEnabled(\"black\")\n        updateTextModeEnabled(\"white\")\n        updateModeTextNav(\"Dark\")\n        updateTranslateXValue(\"0px\")\n        updateLabelBackgroundColor(\"#c5d1dc84\")\n        break;\n    }\n\n\n  }\n  return (\n    <>\n      <Navbar enableDarkModeOnClick={enableDarkModeOnClick} darkLightModeNav={{ backgroundColor: modeEnabled }} darkLightModeTextNav={modeTextNav} darkLightModeText={{ color: textModeEnabled }} transitionCircle={{ transform: `translateX( ${translateXValue} )`}} backgroundColorDarkMode = {{background:labelBackgroundColor}} />\n      <TextArea />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCH,QAAQ,CAAC,OAAD,CAAjD;EACA,MAAM,CAACI,eAAD,EAAkBC,qBAAlB,IAA2CL,QAAQ,CAAC,OAAD,CAAzD;EACA,MAAM,CAACM,WAAD,EAAcC,iBAAd,IAAmCP,QAAQ,CAAC,MAAD,CAAjD;EACA,MAAM,CAACQ,eAAD,EAAkBC,qBAAlB,IAA2CT,QAAQ,CAAC,KAAD,CAAzD;EACA,MAAM,CAACU,oBAAD,EAAuBC,0BAAvB,IAAqDX,QAAQ,CAAC,WAAD,CAAnE;;EAIA,MAAMY,qBAAqB,GAAG,MAAM;IAClC;IAEA,QAAQV,WAAR;MACE,KAAK,OAAL;QACEC,iBAAiB,CAAC,OAAD,CAAjB;QACAE,qBAAqB,CAAC,OAAD,CAArB;QACAE,iBAAiB,CAAC,OAAD,CAAjB;QACAE,qBAAqB,CAAC,MAAD,CAArB;QACAE,0BAA0B,CAAC,2CAAD,CAA1B;QACA;;MACF;QACER,iBAAiB,CAAC,OAAD,CAAjB;QACAE,qBAAqB,CAAC,OAAD,CAArB;QACAE,iBAAiB,CAAC,MAAD,CAAjB;QACAE,qBAAqB,CAAC,KAAD,CAArB;QACAE,0BAA0B,CAAC,WAAD,CAA1B;QACA;IAdJ;EAkBD,CArBD;;EAsBA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,qBAAqB,EAAEC,qBAA/B;MAAsD,gBAAgB,EAAE;QAAEC,eAAe,EAAEX;MAAnB,CAAxE;MAA0G,oBAAoB,EAAEI,WAAhI;MAA6I,iBAAiB,EAAE;QAAEQ,KAAK,EAAEV;MAAT,CAAhK;MAA4L,gBAAgB,EAAE;QAAEW,SAAS,EAAG,eAAcP,eAAgB;MAA5C,CAA9M;MAAgQ,uBAAuB,EAAI;QAACQ,UAAU,EAACN;MAAZ;IAA3R;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;;GArCQT,G;;KAAAA,G;AAuCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}