{"ast":null,"code":"var _jsxFileName = \"/home/simant/Personal/Programming/js-react/Text Analyzer/src/Components/TextArea.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./TextArea.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextArea(props) {\n  _s();\n  const [text, updateText] = useState(\"\");\n  let [numberOfCharacters, updateNumberOfCharacters] = useState(0);\n  let [numberOfWords, updateNumberOfWords] = useState(0);\n  let onChangeHandle = e => {\n    updateText(e.target.value);\n    updateNumberOfCharacters(e.target.value.split(\" \").join(\"\").length);\n    updateNumberOfWords(e.target.value.split(\" \").filter(words => words !== \"\").length);\n  };\n  let clickToUpperCase = () => {\n    updateText(text.toUpperCase());\n  };\n  let clickToLowerCase = () => {\n    updateText(text.toLowerCase());\n  };\n  let clickToClear = () => {\n    updateText(\"\");\n    updateNumberOfCharacters(0);\n    updateNumberOfWords(0);\n  };\n  let clickToCopy = () => {\n    navigator.clipboard.writeText(text);\n  };\n  let clickToPaste = () => {\n    navigator.clipboard.readText().then(txt => {\n      updateText(txt);\n      updateNumberOfCharacters(txt.split(\" \").join(\"\").length);\n      updateNumberOfWords(txt.split(\" \").filter(words => words !== \"\").length);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Playing with the text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"text-area\",\n        placeholder: \"Enter your Text\",\n        value: text,\n        onInput: onChangeHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToUpperCase,\n          style: props.backgroundColorButton,\n          children: \"Click to change to UpperCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToLowerCase,\n          style: props.backgroundColorButton,\n          children: \"Click to change to LowerCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToClear,\n          style: props.backgroundColorButton,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToCopy,\n          style: props.backgroundColorButton,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToPaste,\n          style: props.backgroundColorButton,\n          children: \"Paste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numberOfWords\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: props.textAreaColor,\n          children: [\"The Number of Characters are \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numberOfCharacters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 82\n          }, this), \" and the Number of Words are \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numberOfWords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 144\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TextArea, \"HMO1NXfY6dG2pZmatP5gY7R6azc=\");\n_c = TextArea;\nvar _c;\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextArea","props","_s","text","updateText","numberOfCharacters","updateNumberOfCharacters","numberOfWords","updateNumberOfWords","onChangeHandle","e","target","value","split","join","length","filter","words","clickToUpperCase","toUpperCase","clickToLowerCase","toLowerCase","clickToClear","clickToCopy","navigator","clipboard","writeText","clickToPaste","readText","then","txt","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","placeholder","onInput","onClick","style","backgroundColorButton","textAreaColor","_c","$RefreshReg$"],"sources":["/home/simant/Personal/Programming/js-react/Text Analyzer/src/Components/TextArea.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./TextArea.css\";\r\n\r\nexport default function TextArea(props) {\r\n    const [text, updateText] = useState(\"\")\r\n    let [numberOfCharacters, updateNumberOfCharacters] = useState(0)\r\n    let [numberOfWords, updateNumberOfWords] = useState(0)\r\n    let onChangeHandle = (e) => {\r\n        updateText(e.target.value)\r\n        updateNumberOfCharacters(e.target.value.split(\" \").join(\"\").length)\r\n        updateNumberOfWords(e.target.value.split(\" \").filter(words => words !== \"\").length)\r\n    }\r\n    let clickToUpperCase = () => {\r\n        updateText(text.toUpperCase());\r\n    }\r\n    let clickToLowerCase = () => {\r\n        updateText(text.toLowerCase());\r\n    }\r\n    let clickToClear=()=>{\r\n        updateText(\"\")\r\n        updateNumberOfCharacters(0)\r\n        updateNumberOfWords(0)\r\n    }\r\n    let clickToCopy=()=>{\r\n        navigator.clipboard.writeText(text)\r\n    }\r\n    let clickToPaste=()=>{\r\n        navigator.clipboard.readText().then((txt)=>{\r\n        updateText(txt);\r\n        updateNumberOfCharacters(txt.split(\" \").join(\"\").length)\r\n        updateNumberOfWords(txt.split(\" \").filter(words => words !== \"\").length)\r\n    });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <strong>Playing with the text</strong>\r\n                <label htmlFor=\"text-area\"></label>\r\n                <textarea id=\"text-area\" placeholder=\"Enter your Text\" value={text} onInput={onChangeHandle}></textarea>\r\n                <div className=\"buttons\">\r\n                    <button onClick={clickToUpperCase} style={props.backgroundColorButton}>Click to change to UpperCase</button>\r\n                    <button onClick={clickToLowerCase} style={props.backgroundColorButton}>Click to change to LowerCase</button>\r\n                    <button onClick={clickToClear} style={props.backgroundColorButton}>Clear All</button>\r\n                    <button onClick={clickToCopy} style={props.backgroundColorButton}>Copy</button>\r\n                    <button onClick={clickToPaste} style={props.backgroundColorButton}>Paste</button>\r\n                </div>\r\n                <div className=\"numberOfWords\">\r\n                    <h3 style={props.textAreaColor}>The Number of Characters are <span>{numberOfCharacters}</span> and the Number of Words are <span>{numberOfWords}</span></h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}