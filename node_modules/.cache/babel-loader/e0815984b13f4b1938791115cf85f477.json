{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react';\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimh;\n\nfunction App() {\n  _s();\n\n  //   const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n  const [state, setState] = useState({\n    modeEnabled: \"#1F2633\",\n    textModeEnabled: 'white',\n    modeTextNav: 'Dark',\n    translateXValue: '0px',\n    labelBackgroundColor: '#c5d1dc84',\n    btnBgColor: 'green',\n    textColor: \"black\",\n    currentPageIsHome: \"none\",\n    currentPageIsContact: \"none\"\n  }); // const location = useLocation();\n  // useEffect(() => {\n  //   switch (location.pathname) {\n  //     case \"/contact\":\n  //       setState({currentPageIsContact:\"underline\"})\n  //       console.log(location.pathname)\n  //       break;\n  //     default:\n  //       break;\n  //   };\n  // }, [location]);\n\n  useHistory().push(\"/\");\n\n  const enableDarkModeOnClick = () => {\n    switch (state.modeEnabled) {\n      case \"#1F2633\":\n        document.body.style.backgroundColor = \"#1F2633\";\n        setState({\n          modeEnabled: \"rgb(185, 192, 198)\",\n          textModeEnabled: \"black\",\n          modeTextNav: \"Light\",\n          translateXValue: \"+70%\",\n          btnBgColor: \"rgb(185, 192, 198)\",\n          textColor: \"white\",\n          labelBackgroundColor: \"#00D1FF\"\n        });\n        break;\n\n      default:\n        document.body.style.backgroundColor = \"white\";\n        setState({\n          modeEnabled: \"#1F2633\",\n          textModeEnabled: \"white\",\n          modeTextNav: \"Dark\",\n          translateXValue: \"0px\",\n          btnBgColor: \"green\",\n          textColor: \"black\",\n          labelBackgroundColor: \"#c5d1dc84\"\n        });\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      enableDarkModeOnClick: enableDarkModeOnClick,\n      darkLightModeNav: {\n        backgroundColor: state.modeEnabled\n      },\n      darkLightModeTextNav: state.modeTextNav,\n      darkLightModeText: {\n        color: state.textModeEnabled\n      },\n      detectCurrentPage: state.detectCurrentPages,\n      transitionCircle: {\n        transform: `translateX( ${state.translateXValue} )`\n      },\n      backgroundColorDarkMode: {\n        backgroundColor: state.labelBackgroundColor\n      },\n      currentPageIsHome: {\n        textDecoration: state.currentPage\n      },\n      currentPageIsContact: {\n        textDecoration: state.currentPageIsContact\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TextArea, {\n          backgroundColorButton: {\n            backgroundColor: state.btnBgColor,\n            color: state.textModeEnabled\n          },\n          textAreaColor: {\n            color: state.textColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {\n          textAreaColor: {\n            color: state.textColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"kvFEyMapWxvMPKeL/pN6UIjKrRE=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextArea","React","useState","Contact","Route","Routes","useEffect","useLocation","imh","App","state","setState","modeEnabled","textModeEnabled","modeTextNav","translateXValue","labelBackgroundColor","btnBgColor","textColor","currentPageIsHome","currentPageIsContact","useHistory","push","enableDarkModeOnClick","document","body","style","backgroundColor","color","detectCurrentPages","transform","textDecoration","currentPage"],"sources":["D:/Programming/js-react/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react'\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimh\n\n\nfunction App() {\n//   const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n\n  const [state, setState] = useState({\n    modeEnabled: \"#1F2633\",\n    textModeEnabled: 'white',\n    modeTextNav: 'Dark',\n    translateXValue: '0px',\n    labelBackgroundColor: '#c5d1dc84',\n    btnBgColor: 'green',\n    textColor : \"black\",\n    currentPageIsHome : \"none\",\n    currentPageIsContact: \"none\"\n  })\n\n  // const location = useLocation();\n\n  // useEffect(() => {\n  //   switch (location.pathname) {\n  //     case \"/contact\":\n  //       setState({currentPageIsContact:\"underline\"})\n  //       console.log(location.pathname)\n  //       break;\n    \n  //     default:\n  //       break;\n  //   };\n  // }, [location]);\n\n  useHistory().push(\"/\")\n  \n\n\n  const enableDarkModeOnClick = () => {\n    switch (state.modeEnabled) {\n      case \"#1F2633\":\n        document.body.style.backgroundColor = \"#1F2633\"\n        setState({modeEnabled : \"rgb(185, 192, 198)\", textModeEnabled : \"black\", modeTextNav : \"Light\",  translateXValue : \"+70%\", btnBgColor : \"rgb(185, 192, 198)\", textColor : \"white\", labelBackgroundColor : \"#00D1FF\"})\n        break;\n      default:\n        document.body.style.backgroundColor = \"white\"\n        setState({modeEnabled : \"#1F2633\", textModeEnabled : \"white\", modeTextNav : \"Dark\",  translateXValue : \"0px\", btnBgColor : \"green\", textColor : \"black\", labelBackgroundColor : \"#c5d1dc84\"})\n        break;\n    }\n\n  }\n  return (\n    <>\n      <Navbar enableDarkModeOnClick={enableDarkModeOnClick} darkLightModeNav={{ backgroundColor: state.modeEnabled}}\n      darkLightModeTextNav={state.modeTextNav} darkLightModeText={{ color: state.textModeEnabled}} detectCurrentPage={state.detectCurrentPages} transitionCircle={{ transform: `translateX( ${state.translateXValue} )` }} backgroundColorDarkMode={{ backgroundColor: state.labelBackgroundColor }} currentPageIsHome={{textDecoration : state.currentPage}} currentPageIsContact={{textDecoration : state.currentPageIsContact}} />\n      <Routes>\n        <Route path=\"/\" element={<TextArea backgroundColorButton={{ backgroundColor: state.btnBgColor, color: state.textModeEnabled }} textAreaColor={{ color: state.textColor }} />}>\n        </Route>\n        <Route path=\"/contact\" element={<Contact textAreaColor={{ color: state.textColor }} />}>\n        </Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}