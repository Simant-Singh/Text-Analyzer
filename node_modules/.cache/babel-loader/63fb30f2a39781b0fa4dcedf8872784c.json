{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react';\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\"; // import (use)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n  const location = useLocation();\n  const [state, setState] = useState({\n    modeEnabled: \"#1F2633\",\n    textModeEnabled: 'white',\n    modeTextNav: 'Dark',\n    translateXValue: '0px',\n    labelBackgroundColor: '#c5d1dc84',\n    btnBgColor: 'green',\n    textColor: \"black\",\n    contactPgUnderline: \"none\"\n  }); // useHistory().push(\"/\")\n  // let clicking=()=>{\n  // if (window.location.pathname === \"/contact\") {\n  //   setState({ contactPgUnderline: \"underline\" })\n  //   console.log(\"contact\")\n  // };\n  // }\n\n  const enableDarkModeOnClick = () => {\n    console.log(state.modeEnabled); // console.log(state.modeTextNav)\n    // console.log(state)\n\n    if (state.modeEnabled === \"#1F2633\") {\n      console.log(\"dark mode click\");\n      document.body.style.backgroundColor = \"#1F2633\";\n      setState({\n        modeEnabled: \"rgb(185, 192, 198)\",\n        textModeEnabled: \"black\",\n        modeTextNav: \"Light\",\n        translateXValue: \"+70%\",\n        btnBgColor: \"rgb(185, 192, 198)\",\n        textColor: \"white\",\n        labelBackgroundColor: \"#00D1FF\"\n      });\n    } else {\n      document.body.style.backgroundColor = \"white\";\n      setState({\n        modeEnabled: \"#1F2633\",\n        textModeEnabled: \"white\",\n        modeTextNav: \"Dark\",\n        translateXValue: \"0px\",\n        btnBgColor: \"green\",\n        textColor: \"black\",\n        labelBackgroundColor: \"#c5d1dc84\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (window.location.pathname === \"/contact\") {\n      setState({\n        contactPgUnderline: \"underline\"\n      });\n      console.log(\"contact\");\n    }\n\n    ;\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      enableDarkModeOnClick: enableDarkModeOnClick,\n      darkLightModeNav: {\n        backgroundColor: state.modeEnabled\n      },\n      darkLightModeTextNav: state.modeTextNav,\n      darkLightModeText: {\n        color: state.textModeEnabled\n      },\n      transitionCircle: {\n        transform: `translateX( ${state.translateXValue} )`\n      },\n      backgroundColorDarkMode: {\n        backgroundColor: state.labelBackgroundColor\n      },\n      currentPgIsContact: {\n        textDecoration: state.contactPgUnderline\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TextArea, {\n          backgroundColorButton: {\n            backgroundColor: state.btnBgColor,\n            color: state.textModeEnabled\n          },\n          textAreaColor: {\n            color: state.textColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {\n          textAreaColor: {\n            color: state.textColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"YtBZvjBGPGBGR2w4hgaxTUSLr34=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextArea","React","useState","Contact","Route","Routes","useEffect","useLocation","App","location","state","setState","modeEnabled","textModeEnabled","modeTextNav","translateXValue","labelBackgroundColor","btnBgColor","textColor","contactPgUnderline","enableDarkModeOnClick","console","log","document","body","style","backgroundColor","window","pathname","color","transform","textDecoration"],"sources":["D:/Programming/js-react/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react'\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n// import (use)\n\n\nfunction App() {\n    // const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n    const location = useLocation();\n    \n    \n    \n    const [state, setState] = useState({\n      modeEnabled: \"#1F2633\",\n      textModeEnabled: 'white',\n      modeTextNav: 'Dark',\n      translateXValue: '0px',\n      labelBackgroundColor: '#c5d1dc84',\n      btnBgColor: 'green',\n      textColor: \"black\",\n      contactPgUnderline: \"none\",\n    })\n    \n    \n    \n\n  // useHistory().push(\"/\")\n\n  // let clicking=()=>{\n    // if (window.location.pathname === \"/contact\") {\n    //   setState({ contactPgUnderline: \"underline\" })\n    //   console.log(\"contact\")\n    // };\n  // }\n\n  const enableDarkModeOnClick = () => {\n    console.log(state.modeEnabled)\n    // console.log(state.modeTextNav)\n    // console.log(state)\n    if (state.modeEnabled === \"#1F2633\") {\n      console.log(\"dark mode click\")\n      document.body.style.backgroundColor = \"#1F2633\"\n      setState({ modeEnabled: \"rgb(185, 192, 198)\", textModeEnabled: \"black\", modeTextNav: \"Light\", translateXValue: \"+70%\", btnBgColor: \"rgb(185, 192, 198)\", textColor: \"white\", labelBackgroundColor: \"#00D1FF\" })\n    }\n    else {\n      document.body.style.backgroundColor = \"white\"\n      setState({ modeEnabled: \"#1F2633\", textModeEnabled: \"white\", modeTextNav: \"Dark\", translateXValue: \"0px\", btnBgColor: \"green\", textColor: \"black\", labelBackgroundColor: \"#c5d1dc84\" })\n    }\n\n  }\n  useEffect(() => {\n    if (window.location.pathname === \"/contact\") {\n      setState({ contactPgUnderline: \"underline\" })\n      console.log(\"contact\")\n    };\n  }, [location]);\n  \n  return (\n    <>\n      <Navbar enableDarkModeOnClick={enableDarkModeOnClick} darkLightModeNav={{ backgroundColor: state.modeEnabled }} darkLightModeTextNav={state.modeTextNav} darkLightModeText={{ color: state.textModeEnabled }} transitionCircle={{ transform: `translateX( ${state.translateXValue} )` }} backgroundColorDarkMode={{ backgroundColor: state.labelBackgroundColor }} currentPgIsContact={{textDecoration : state.contactPgUnderline}} />\n      <Routes>\n        <Route path=\"/\" element={<TextArea backgroundColorButton={{ backgroundColor: state.btnBgColor, color: state.textModeEnabled }} textAreaColor={{ color: state.textColor }} />}>\n        </Route>\n        <Route path=\"/contact\" element={<Contact textAreaColor={{ color: state.textColor }} />}>\n        </Route>\n      </Routes>\n    </>\n  );\n  \n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}