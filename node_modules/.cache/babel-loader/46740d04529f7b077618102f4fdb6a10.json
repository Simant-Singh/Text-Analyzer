{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react';\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom'; // import { useHistory } from 'react-router-dom'\n// import { browserHistory } from 'react-router';\n// import { useEffect } from \"react\";\n// import { useLocation } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //   const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n  const [state, setState] = useState({\n    modeEnabled: \"#1F2633\",\n    textModeEnabled: \"white\",\n    modeTextNav: \"Dark\",\n    translateXValue: \"0px\",\n    labelBackgroundColor: \"#c5d1dc84\",\n    btnBgColor: \"green\",\n    textColor: \"white\"\n  }); // detectCurrentPageUnderline\n  // const location = useLocation();\n  // useEffect(() => {\n  //   findingCurrentRoutePath();\n  //   console.log(window.location.pathname)\n  // },[window.location.pathname]);\n  // function findingCurrentRoutePath(){\n  // console.log(location.pathname[0])\n  // window.onload=()=>{\n  //   switch (window.location.pathname) {\n  //     case \"/contact\":\n  //       break;\n  //       case \"/\":\n  //         console.log(\"home\")\n  //         // updateDetectCurrentPageUnderline(\"underline\")\n  //         break;\n  //       default:\n  //         // updateDetectCurrentPageUnderline(\"none\")\n  //       }\n  //     }\n  // }\n  // findingCurrentRoutePath();\n  // const detectCurrentPages = \"underline\"\n  // }\n  //Your initialization\n\n  const enableDarkModeOnClick = () => {\n    // setState({modeEnabled : \"blue\"})\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n    console.log(state.modeEnabled);\n\n    if (state.modeEnabled) {\n      // case \"#1F2633\":\n      console.log(\"hello\");\n      document.body.style.backgroundColor = \"#1F2633\"; //     // setState({modeEnabled : \"blue\"})\n      //     setState({textModeEnabled : \"black\"})\n\n      setState({\n        modeTextNav: \"Light\"\n      });\n      setState({\n        translateXValue: \"+70%\"\n      }); // setState({labelBackgroundColor : \"#00D1FF\"})\n      //     setState({btnBgColor : \"rgb(185, 192, 198)\"})\n      //     setState({textColor : \"white\"})\n      //     console.log(\"dark\")\n      // break;\n      // default:\n      //     document.body.style.backgroundColor = \"white\"\n      //     setState({modeEnabled : \"#1F2633\"})\n      //     setState({textModeEnabled : \"white\"})\n      //     setState({modeTextNav : \"Dark\"})\n      //     setState({translateXValue : \"0px\"})\n      //     setState({labelBackgroundColor : \"#c5d1dc84\"})\n      //     setState({btnBgColor : \"green\"})\n      //     setState({textColor : \"black\"})\n      //     console.log(\"light\")\n      // updateModeEnabled(\"#1F2633\")\n      // updateTextModeEnabled(\"white\")\n      // updateModeTextNav(\"Dark\")\n      // updateTranslateXValue(\"0px\")\n      // updateLabelBackgroundColor(\"#c5d1dc84\")\n      // updateBtnBgColor(\"green\")\n      // updateTextColor(\"black\")\n      // break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      enableDarkModeOnClick: enableDarkModeOnClick,\n      darkLightModeNav: {\n        backgroundColor: state.modeEnabled\n      },\n      darkLightModeTextNav: state.modeTextNav,\n      darkLightModeText: {\n        color: state.textModeEnabled\n      },\n      detectCurrentPage: state.detectCurrentPages,\n      transitionCircle: {\n        transform: `translateX( ${state.translateXValue} )`\n      },\n      backgroundColorDarkMode: {\n        backgroundColor: state.labelBackgroundColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TextArea, {\n          backgroundColorButton: {\n            backgroundColor: state.btnBgColor,\n            color: state.textModeEnabled\n          },\n          textAreaColor: {\n            color: state.textColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {\n          textAreaColor: {\n            color: state.textColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"dGmaJowkzEnFcaC+F/+3IX6Wbz4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextArea","React","useState","Contact","Route","Routes","App","state","setState","modeEnabled","textModeEnabled","modeTextNav","translateXValue","labelBackgroundColor","btnBgColor","textColor","enableDarkModeOnClick","console","log","document","body","style","backgroundColor","color","detectCurrentPages","transform"],"sources":["D:/Programming/js-react/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react'\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\n// import { useHistory } from 'react-router-dom'\n// import { browserHistory } from 'react-router';\n\n// import { useEffect } from \"react\";\n// import { useLocation } from \"react-router-dom\";\n\n\nfunction App() {\n//   const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n\n  const [state, setState] = useState({\n    modeEnabled: \"#1F2633\",\n    textModeEnabled: \"white\",\n    modeTextNav: \"Dark\",\n    translateXValue: \"0px\",\n    labelBackgroundColor: \"#c5d1dc84\",\n    btnBgColor: \"green\",\n    textColor : \"white\"\n  })\n  // detectCurrentPageUnderline\n  \n  \n  // const location = useLocation();\n\n  // useEffect(() => {\n  //   findingCurrentRoutePath();\n  //   console.log(window.location.pathname)\n  // },[window.location.pathname]);\n\n  // function findingCurrentRoutePath(){\n    // console.log(location.pathname[0])\n    // window.onload=()=>{\n    //   switch (window.location.pathname) {\n    //     case \"/contact\":\n    //       break;\n    //       case \"/\":\n    //         console.log(\"home\")\n    //         // updateDetectCurrentPageUnderline(\"underline\")\n    //         break;\n    //       default:\n    //         // updateDetectCurrentPageUnderline(\"none\")\n  \n    //       }\n    //     }\n  // }\n  \n  // findingCurrentRoutePath();\n  // const detectCurrentPages = \"underline\"\n  // }\n\n  //Your initialization\n  \n\n\n  const enableDarkModeOnClick = () => {\n    // setState({modeEnabled : \"blue\"})\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n    console.log(state.modeEnabled)\n    if (state.modeEnabled) {\n      // case \"#1F2633\":\n        console.log(\"hello\")\n        document.body.style.backgroundColor = \"#1F2633\";\n    //     // setState({modeEnabled : \"blue\"})\n    //     setState({textModeEnabled : \"black\"})\n        setState({modeTextNav : \"Light\"});\n        setState({translateXValue : \"+70%\"});\n        // setState({labelBackgroundColor : \"#00D1FF\"})\n    //     setState({btnBgColor : \"rgb(185, 192, 198)\"})\n    //     setState({textColor : \"white\"})\n    //     console.log(\"dark\")\n        // break;\n      // default:\n    //     document.body.style.backgroundColor = \"white\"\n    //     setState({modeEnabled : \"#1F2633\"})\n    //     setState({textModeEnabled : \"white\"})\n    //     setState({modeTextNav : \"Dark\"})\n    //     setState({translateXValue : \"0px\"})\n    //     setState({labelBackgroundColor : \"#c5d1dc84\"})\n    //     setState({btnBgColor : \"green\"})\n    //     setState({textColor : \"black\"})\n    //     console.log(\"light\")\n\n        // updateModeEnabled(\"#1F2633\")\n        // updateTextModeEnabled(\"white\")\n        // updateModeTextNav(\"Dark\")\n        // updateTranslateXValue(\"0px\")\n        // updateLabelBackgroundColor(\"#c5d1dc84\")\n        // updateBtnBgColor(\"green\")\n        // updateTextColor(\"black\")\n        // break;\n    }\n\n  }\n  return (\n    <>\n      <Navbar enableDarkModeOnClick={enableDarkModeOnClick} darkLightModeNav={{ backgroundColor: state.modeEnabled}}\n      darkLightModeTextNav={state.modeTextNav} darkLightModeText={{ color: state.textModeEnabled}} detectCurrentPage={state.detectCurrentPages} transitionCircle={{ transform: `translateX( ${state.translateXValue} )` }} backgroundColorDarkMode={{ backgroundColor: state.labelBackgroundColor }} />\n      <Routes>\n        <Route path=\"/\" element={<TextArea backgroundColorButton={{ backgroundColor: state.btnBgColor, color: state.textModeEnabled }} textAreaColor={{ color: state.textColor }} />}>\n        </Route>\n        <Route path=\"/contact\" element={<Contact textAreaColor={{ color: state.textColor }} />}>\n        </Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;AACA;AAEA;AACA;;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACf;EAEE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;IACjCO,WAAW,EAAE,SADoB;IAEjCC,eAAe,EAAE,OAFgB;IAGjCC,WAAW,EAAE,MAHoB;IAIjCC,eAAe,EAAE,KAJgB;IAKjCC,oBAAoB,EAAE,WALW;IAMjCC,UAAU,EAAE,OANqB;IAOjCC,SAAS,EAAG;EAPqB,CAAD,CAAlC,CAHa,CAYb;EAGA;EAEA;EACA;EACA;EACA;EAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACF;EAEA;EACA;EACA;EAEA;;EAIA,MAAMC,qBAAqB,GAAG,MAAM;IAClC;IACA;IACAC,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACE,WAAlB;;IACA,IAAIF,KAAK,CAACE,WAAV,EAAuB;MACrB;MACEQ,OAAO,CAACC,GAAR,CAAY,OAAZ;MACAC,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC,CAHmB,CAIvB;MACA;;MACId,QAAQ,CAAC;QAACG,WAAW,EAAG;MAAf,CAAD,CAAR;MACAH,QAAQ,CAAC;QAACI,eAAe,EAAG;MAAnB,CAAD,CAAR,CAPmB,CAQnB;MACJ;MACA;MACA;MACI;MACF;MACF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEI;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACH;EAEF,CAtCD;;EAuCA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,qBAAqB,EAAEI,qBAA/B;MAAsD,gBAAgB,EAAE;QAAEM,eAAe,EAAEf,KAAK,CAACE;MAAzB,CAAxE;MACA,oBAAoB,EAAEF,KAAK,CAACI,WAD5B;MACyC,iBAAiB,EAAE;QAAEY,KAAK,EAAEhB,KAAK,CAACG;MAAf,CAD5D;MAC6F,iBAAiB,EAAEH,KAAK,CAACiB,kBADtH;MAC0I,gBAAgB,EAAE;QAAEC,SAAS,EAAG,eAAclB,KAAK,CAACK,eAAgB;MAAlD,CAD5J;MACqN,uBAAuB,EAAE;QAAEU,eAAe,EAAEf,KAAK,CAACM;MAAzB;IAD9O;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,QAAD;UAAU,qBAAqB,EAAE;YAAES,eAAe,EAAEf,KAAK,CAACO,UAAzB;YAAqCS,KAAK,EAAEhB,KAAK,CAACG;UAAlD,CAAjC;UAAsG,aAAa,EAAE;YAAEa,KAAK,EAAEhB,KAAK,CAACQ;UAAf;QAArH;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAuB,OAAO,eAAE,QAAC,OAAD;UAAS,aAAa,EAAE;YAAEQ,KAAK,EAAEhB,KAAK,CAACQ;UAAf;QAAxB;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAYD;;GAlGQT,G;;KAAAA,G;AAoGT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}