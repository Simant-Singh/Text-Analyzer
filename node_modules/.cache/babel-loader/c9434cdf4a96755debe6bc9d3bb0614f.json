{"ast":null,"code":"import _slicedToArray from \"D:\\\\Programming\\\\js-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\App.js\";\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react';\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  var _useState = useState(\"#1F2633\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      modeEnabled = _useState2[0],\n      updateModeEnabled = _useState2[1];\n\n  var _useState3 = useState(\"white\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      textModeEnabled = _useState4[0],\n      updateTextModeEnabled = _useState4[1];\n\n  var _useState5 = useState(\"Dark\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modeTextNav = _useState6[0],\n      updateModeTextNav = _useState6[1];\n\n  var _useState7 = useState(\"0px\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      translateXValue = _useState8[0],\n      updateTranslateXValue = _useState8[1];\n\n  var _useState9 = useState(\"#c5d1dc84\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      labelBackgroundColor = _useState10[0],\n      updateLabelBackgroundColor = _useState10[1];\n\n  var _useState11 = useState(\"green\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      btnBgColor = _useState12[0],\n      updateBtnBgColor = _useState12[1];\n\n  var _useState13 = useState(\"black\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      textColor = _useState14[0],\n      updateTextColor = _useState14[1];\n\n  var enableDarkModeOnClick = function enableDarkModeOnClick() {\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n    switch (modeEnabled) {\n      case \"#1F2633\":\n        document.body.style.backgroundColor = \"#1F2633\";\n        updateModeEnabled(\"rgb(185, 192, 198)\");\n        updateTextModeEnabled(\"black\");\n        updateModeTextNav(\"Light\");\n        updateTranslateXValue(\"+70%\");\n        updateLabelBackgroundColor(\"#00D1FF\");\n        updateBtnBgColor(\"rgb(185, 192, 198)\");\n        updateTextColor(\"white\");\n        break;\n\n      default:\n        document.body.style.backgroundColor = \"white\";\n        updateModeEnabled(\"#1F2633\");\n        updateTextModeEnabled(\"white\");\n        updateModeTextNav(\"Dark\");\n        updateTranslateXValue(\"0px\");\n        updateLabelBackgroundColor(\"#c5d1dc84\");\n        updateBtnBgColor(\"green\");\n        updateTextColor(\"black\");\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    enableDarkModeOnClick: enableDarkModeOnClick,\n    darkLightModeNav: {\n      backgroundColor: modeEnabled\n    },\n    darkLightModeTextNav: modeTextNav,\n    darkLightModeText: {\n      color: textModeEnabled\n    },\n    transitionCircle: {\n      transform: \"translateX( \".concat(translateXValue, \" )\")\n    },\n    backgroundColorDarkMode: {\n      backgroundColor: labelBackgroundColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    backgroundColorButton: {\n      backgroundColor: btnBgColor,\n      color: textModeEnabled\n    },\n    textAreaH3Color: {\n      color: textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Contact, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"names":["Navbar","TextArea","React","useState","Contact","Route","Routes","App","modeEnabled","updateModeEnabled","textModeEnabled","updateTextModeEnabled","modeTextNav","updateModeTextNav","translateXValue","updateTranslateXValue","labelBackgroundColor","updateLabelBackgroundColor","btnBgColor","updateBtnBgColor","textColor","updateTextColor","enableDarkModeOnClick","document","body","style","backgroundColor","color","transform"],"sources":["D:/Programming/js-react/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react'\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\n\n\nfunction App() {\n  const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n  const [textModeEnabled, updateTextModeEnabled] = useState(\"white\")\n  const [modeTextNav, updateModeTextNav] = useState(\"Dark\")\n  const [translateXValue, updateTranslateXValue] = useState(\"0px\")\n  const [labelBackgroundColor, updateLabelBackgroundColor] = useState(\"#c5d1dc84\")\n  const [btnBgColor, updateBtnBgColor] = useState(\"green\")\n  const [textColor, updateTextColor] = useState(\"black\")\n\n\n\n  const enableDarkModeOnClick = () => {\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n\n    switch (modeEnabled) {\n      case \"#1F2633\":\n        document.body.style.backgroundColor = \"#1F2633\"\n        updateModeEnabled(\"rgb(185, 192, 198)\")\n        updateTextModeEnabled(\"black\")\n        updateModeTextNav(\"Light\")\n        updateTranslateXValue(\"+70%\")\n        updateLabelBackgroundColor(\"#00D1FF\")\n        updateBtnBgColor(\"rgb(185, 192, 198)\")\n        updateTextColor(\"white\")\n        break;\n      default:\n        document.body.style.backgroundColor = \"white\"\n        updateModeEnabled(\"#1F2633\")\n        updateTextModeEnabled(\"white\")\n        updateModeTextNav(\"Dark\")\n        updateTranslateXValue(\"0px\")\n        updateLabelBackgroundColor(\"#c5d1dc84\")\n        updateBtnBgColor(\"green\")\n        updateTextColor(\"black\")\n        break;\n    }\n\n\n  }\n  return (\n    <>\n      <Routes>\n      <Navbar enableDarkModeOnClick={enableDarkModeOnClick} darkLightModeNav={{ backgroundColor: modeEnabled }} darkLightModeTextNav={modeTextNav} darkLightModeText={{ color: textModeEnabled }} transitionCircle={{ transform: `translateX( ${translateXValue} )` }} backgroundColorDarkMode={{ backgroundColor: labelBackgroundColor }} />\n        <Route path=\"/\" element>\n          <TextArea backgroundColorButton={{ backgroundColor: btnBgColor, color: textModeEnabled }} textAreaH3Color={{ color: textColor }} />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}