{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react';\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\nimport { useEffect } from \"react\"; // import { useHistory } from 'react-router-dom'\n// import { browserHistory } from 'react-router';\n\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\");\n  const [textModeEnabled, updateTextModeEnabled] = useState(\"white\");\n  const [modeTextNav, updateModeTextNav] = useState(\"Dark\");\n  const [translateXValue, updateTranslateXValue] = useState(\"0px\");\n  const [labelBackgroundColor, updateLabelBackgroundColor] = useState(\"#c5d1dc84\");\n  const [btnBgColor, updateBtnBgColor] = useState(\"green\");\n  const [textColor, updateTextColor] = useState(\"black\");\n  const [detectCurrentPageUnderline, updateDetectCurrentPageUnderline] = useState(\"none\"); // detectCurrentPageUnderline\n\n  const location = useLocation();\n  useEffect(() => {\n    findingCurrentRoutePath(); // console.log([location.pathname[0]])\n  }, [location]);\n\n  function findingCurrentRoutePath() {\n    switch (window.location.pathname) {\n      case \"/\":\n        console.log(\"home\"); // updateDetectCurrentPageUnderline(\"underline\")\n\n        break;\n\n      case \"/contact\":\n        console.log(\"contact\");\n        updateDetectCurrentPageUnderline(\"underline\");\n        break;\n\n      default:\n        updateDetectCurrentPageUnderline(\"none\");\n    }\n  } // console.log(window.location.pathname)\n  // findingCurrentRoutePath();\n  //Your initialization\n\n\n  const enableDarkModeOnClick = () => {\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n    switch (modeEnabled) {\n      case \"#1F2633\":\n        document.body.style.backgroundColor = \"#1F2633\";\n        updateModeEnabled(\"rgb(185, 192, 198)\");\n        updateTextModeEnabled(\"black\");\n        updateModeTextNav(\"Light\");\n        updateTranslateXValue(\"+70%\");\n        updateLabelBackgroundColor(\"#00D1FF\");\n        updateBtnBgColor(\"rgb(185, 192, 198)\");\n        updateTextColor(\"white\");\n        break;\n\n      default:\n        document.body.style.backgroundColor = \"white\";\n        updateModeEnabled(\"#1F2633\");\n        updateTextModeEnabled(\"white\");\n        updateModeTextNav(\"Dark\");\n        updateTranslateXValue(\"0px\");\n        updateLabelBackgroundColor(\"#c5d1dc84\");\n        updateBtnBgColor(\"green\");\n        updateTextColor(\"black\");\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      enableDarkModeOnClick: enableDarkModeOnClick,\n      darkLightModeNav: {\n        backgroundColor: modeEnabled\n      },\n      darkLightModeTextNav: modeTextNav,\n      darkLightModeText: {\n        color: textModeEnabled\n      },\n      detectCurrentPage: {\n        textDecoration: detectCurrentPageUnderline\n      },\n      transitionCircle: {\n        transform: `translateX( ${translateXValue} )`\n      },\n      backgroundColorDarkMode: {\n        backgroundColor: labelBackgroundColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TextArea, {\n          backgroundColorButton: {\n            backgroundColor: btnBgColor,\n            color: textModeEnabled\n          },\n          textAreaColor: {\n            color: textColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {\n          textAreaColor: {\n            color: textColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"726Sl4ZyMIR+mi7xvLE3U1HYAkU=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextArea","React","useState","Contact","Route","Routes","useEffect","useLocation","App","modeEnabled","updateModeEnabled","textModeEnabled","updateTextModeEnabled","modeTextNav","updateModeTextNav","translateXValue","updateTranslateXValue","labelBackgroundColor","updateLabelBackgroundColor","btnBgColor","updateBtnBgColor","textColor","updateTextColor","detectCurrentPageUnderline","updateDetectCurrentPageUnderline","location","findingCurrentRoutePath","window","pathname","console","log","enableDarkModeOnClick","document","body","style","backgroundColor","color","textDecoration","transform"],"sources":["D:/Programming/js-react/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport React, { useState } from 'react'\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\nimport { useEffect } from \"react\";\n// import { useHistory } from 'react-router-dom'\n// import { browserHistory } from 'react-router';\n\nimport { useLocation } from \"react-router-dom\";\n\n\nfunction App() {\n  const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n  const [textModeEnabled, updateTextModeEnabled] = useState(\"white\")\n  const [modeTextNav, updateModeTextNav] = useState(\"Dark\")\n  const [translateXValue, updateTranslateXValue] = useState(\"0px\")\n  const [labelBackgroundColor, updateLabelBackgroundColor] = useState(\"#c5d1dc84\")\n  const [btnBgColor, updateBtnBgColor] = useState(\"green\")\n  const [textColor, updateTextColor] = useState(\"black\")\n  const [detectCurrentPageUnderline, updateDetectCurrentPageUnderline] = useState(\"none\")\n  // detectCurrentPageUnderline\n  \n  \n  const location = useLocation();\n\n  useEffect(() => {\n    findingCurrentRoutePath();\n    // console.log([location.pathname[0]])\n  }, [location]);\n\n  function findingCurrentRoutePath(){\n    switch (window.location.pathname) {\n      case \"/\":\n        console.log(\"home\")\n        // updateDetectCurrentPageUnderline(\"underline\")\n        break;\n      case \"/contact\":\n        console.log(\"contact\")\n        updateDetectCurrentPageUnderline(\"underline\")\n        break;\n        default:updateDetectCurrentPageUnderline(\"none\")\n\n    }\n  }\n\n  // console.log(window.location.pathname)\n  // findingCurrentRoutePath();\n\n  //Your initialization\n  \n\n\n  const enableDarkModeOnClick = () => {\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n\n    switch (modeEnabled) {\n      case \"#1F2633\":\n        document.body.style.backgroundColor = \"#1F2633\"\n        updateModeEnabled(\"rgb(185, 192, 198)\")\n        updateTextModeEnabled(\"black\")\n        updateModeTextNav(\"Light\")\n        updateTranslateXValue(\"+70%\")\n        updateLabelBackgroundColor(\"#00D1FF\")\n        updateBtnBgColor(\"rgb(185, 192, 198)\")\n        updateTextColor(\"white\")\n        break;\n      default:\n        document.body.style.backgroundColor = \"white\"\n        updateModeEnabled(\"#1F2633\")\n        updateTextModeEnabled(\"white\")\n        updateModeTextNav(\"Dark\")\n        updateTranslateXValue(\"0px\")\n        updateLabelBackgroundColor(\"#c5d1dc84\")\n        updateBtnBgColor(\"green\")\n        updateTextColor(\"black\")\n        break;\n    }\n\n  }\n  return (\n    <>\n      <Navbar enableDarkModeOnClick={enableDarkModeOnClick} darkLightModeNav={{ backgroundColor: modeEnabled }} darkLightModeTextNav={modeTextNav} darkLightModeText={{ color: textModeEnabled}} detectCurrentPage={{textDecoration:detectCurrentPageUnderline}} transitionCircle={{ transform: `translateX( ${translateXValue} )` }} backgroundColorDarkMode={{ backgroundColor: labelBackgroundColor }} />\n      <Routes>\n        <Route path=\"/\" element={<TextArea backgroundColorButton={{ backgroundColor: btnBgColor, color: textModeEnabled }} textAreaColor={{ color: textColor }} />}>\n        </Route>\n        <Route path=\"/contact\" element={<Contact textAreaColor={{ color: textColor }} />}>\n        </Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}