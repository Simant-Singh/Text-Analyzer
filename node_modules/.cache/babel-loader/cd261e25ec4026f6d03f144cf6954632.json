{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\Components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Navbar(props) {\n  _s();\n\n  const [currentPgIsHome, setCurrentPgIsHome] = useState(\"none\");\n  const [currentPageIsContact, setCurrentPgIsContact] = useState(\"none\");\n\n  window.onload = () => {\n    if (window.location.pathname === \"/\") {\n      setCurrentPgIsHome(\"underline\");\n      setCurrentPgIsContact(\"none\");\n      console.log(\"home\");\n    } else if (window.location.pathname === \"conatct\") {\n      setCurrentPgIsContact(\"underline\");\n      setCurrentPgIsHome(\"none\");\n      console.log(\"home\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      style: props.darkLightModeNav,\n      onClick: props.clicking,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"rightSideNav\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: props.darkLightModeText,\n          children: \"Text Tool Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"about\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            style: {\n              textDecoration: currentPgIsHome,\n              ...props.darkLightModeText\n            },\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/contact\",\n            style: {\n              textDecoration: currentPageIsContact,\n              ...props.darkLightModeText\n            },\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"leftSideNav\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"dark-light-mode-checkbox\",\n          \"aria-label\": \"Choose to enable dark or light mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dark-light-mode-label\",\n          className: \"dark-light-mode-toggle-label\",\n          onClick: props.enableDarkModeOnClick,\n          style: props.backgroundColorDarkMode,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dark-light-mode-enabled-circle\",\n            style: props.transitionCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: props.darkLightModeText,\n          children: [\"Enable \", props.darkLightModeTextNav, \" Mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Navbar, \"28xxOkW63Z067x6eZtGUdz3C+q8=\");\n\n_c = Navbar;\nNavbar.defaultProps = {\n  //     // darkLightModeNav: \"#1F2633\",\n  darkLightModeTextNav: 'Dark' //     darkLightModeText:\"white\",\n  //     // transitionCircle: '0px',\n  //     // backgroundColorDarkMode: '#c5d1dc84',\n  //     // currentPgIsHome: \"none\",\n  //     // currentPageIsContact: \"none\"\n\n}; // textModeEnabled: 'white',\n// textColor: \"black\",\n// btnBgColor: 'green',\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Link","useEffect","useLocation","useState","Navbar","props","currentPgIsHome","setCurrentPgIsHome","currentPageIsContact","setCurrentPgIsContact","window","onload","location","pathname","console","log","darkLightModeNav","clicking","darkLightModeText","textDecoration","enableDarkModeOnClick","backgroundColorDarkMode","transitionCircle","darkLightModeTextNav","defaultProps"],"sources":["D:/Programming/js-react/src/Components/Navbar.js"],"sourcesContent":["\r\nimport \"./Navbar.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\"\r\n\r\nexport default function Navbar(props) {\r\n    const [currentPgIsHome, setCurrentPgIsHome] = useState(\"none\")\r\n    const [currentPageIsContact, setCurrentPgIsContact] = useState(\"none\")\r\n\r\n    window.onload=()=>{\r\n        if (window.location.pathname === \"/\"){\r\n            setCurrentPgIsHome(\"underline\")\r\n            setCurrentPgIsContact(\"none\")\r\n            console.log(\"home\")\r\n        }\r\n        else if (window.location.pathname === \"conatct\"){\r\n            setCurrentPgIsContact(\"underline\")\r\n            setCurrentPgIsHome(\"none\")\r\n            console.log(\"home\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav style={props.darkLightModeNav} onClick={props.clicking}>\r\n                <section className=\"rightSideNav\">\r\n                    <h1 style={props.darkLightModeText}>Text Tool Services</h1>\r\n                    <div className=\"about\">\r\n                        <Link to=\"/\" style={{textDecoration: currentPgIsHome, ...props.darkLightModeText}}>Home</Link>\r\n                    </div>\r\n                    <div className=\"contacts\">\r\n                        <Link to=\"/contact\" style={{textDecoration: currentPageIsContact, ...props.darkLightModeText}}>Contact Us</Link>\r\n                    </div>\r\n                </section>\r\n                <section className=\"leftSideNav\">\r\n                    <input type=\"checkbox\" className=\"dark-light-mode-checkbox\" aria-label=\"Choose to enable dark or light mode\" />\r\n                    <label htmlFor=\"dark-light-mode-label\" className=\"dark-light-mode-toggle-label\" onClick={props.enableDarkModeOnClick} style={props.backgroundColorDarkMode}>\r\n                        <div className=\"dark-light-mode-enabled-circle\" style={props.transitionCircle}></div>\r\n                    </label>\r\n                    <h4 style={props.darkLightModeText}>Enable {props.darkLightModeTextNav} Mode</h4>\r\n                </section>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nNavbar.defaultProps = {\r\n//     // darkLightModeNav: \"#1F2633\",\r\n    darkLightModeTextNav: 'Dark',\r\n//     darkLightModeText:\"white\",\r\n//     // transitionCircle: '0px',\r\n//     // backgroundColorDarkMode: '#c5d1dc84',\r\n//     // currentPgIsHome: \"none\",\r\n//     // currentPageIsContact: \"none\"\r\n}\r\n// textModeEnabled: 'white',\r\n// textColor: \"black\",\r\n// btnBgColor: 'green',"],"mappings":";;;AACA,OAAO,cAAP;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAAA;;EAClC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,MAAD,CAAtD;EACA,MAAM,CAACK,oBAAD,EAAuBC,qBAAvB,IAAgDN,QAAQ,CAAC,MAAD,CAA9D;;EAEAO,MAAM,CAACC,MAAP,GAAc,MAAI;IACd,IAAID,MAAM,CAACE,QAAP,CAAgBC,QAAhB,KAA6B,GAAjC,EAAqC;MACjCN,kBAAkB,CAAC,WAAD,CAAlB;MACAE,qBAAqB,CAAC,MAAD,CAArB;MACAK,OAAO,CAACC,GAAR,CAAY,MAAZ;IACH,CAJD,MAKK,IAAIL,MAAM,CAACE,QAAP,CAAgBC,QAAhB,KAA6B,SAAjC,EAA2C;MAC5CJ,qBAAqB,CAAC,WAAD,CAArB;MACAF,kBAAkB,CAAC,MAAD,CAAlB;MACAO,OAAO,CAACC,GAAR,CAAY,MAAZ;IACH;EACJ,CAXD;;EAaA,oBACI;IAAA,uBACI;MAAK,KAAK,EAAEV,KAAK,CAACW,gBAAlB;MAAoC,OAAO,EAAEX,KAAK,CAACY,QAAnD;MAAA,wBACI;QAAS,SAAS,EAAC,cAAnB;QAAA,wBACI;UAAI,KAAK,EAAEZ,KAAK,CAACa,iBAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,OAAf;UAAA,uBACI,QAAC,IAAD;YAAM,EAAE,EAAC,GAAT;YAAa,KAAK,EAAE;cAACC,cAAc,EAAEb,eAAjB;cAAkC,GAAGD,KAAK,CAACa;YAA3C,CAApB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFJ,eAKI;UAAK,SAAS,EAAC,UAAf;UAAA,uBACI,QAAC,IAAD;YAAM,EAAE,EAAC,UAAT;YAAoB,KAAK,EAAE;cAACC,cAAc,EAAEX,oBAAjB;cAAuC,GAAGH,KAAK,CAACa;YAAhD,CAA3B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAUI;QAAS,SAAS,EAAC,aAAnB;QAAA,wBACI;UAAO,IAAI,EAAC,UAAZ;UAAuB,SAAS,EAAC,0BAAjC;UAA4D,cAAW;QAAvE;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,OAAO,EAAC,uBAAf;UAAuC,SAAS,EAAC,8BAAjD;UAAgF,OAAO,EAAEb,KAAK,CAACe,qBAA/F;UAAsH,KAAK,EAAEf,KAAK,CAACgB,uBAAnI;UAAA,uBACI;YAAK,SAAS,EAAC,gCAAf;YAAgD,KAAK,EAAEhB,KAAK,CAACiB;UAA7D;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFJ,eAKI;UAAI,KAAK,EAAEjB,KAAK,CAACa,iBAAjB;UAAA,sBAA4Cb,KAAK,CAACkB,oBAAlD;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAsBH;;GAvCuBnB,M;;KAAAA,M;AAwCxBA,MAAM,CAACoB,YAAP,GAAsB;EACtB;EACID,oBAAoB,EAAE,MAFJ,CAGtB;EACA;EACA;EACA;EACA;;AAPsB,CAAtB,C,CASA;AACA;AACA"},"metadata":{},"sourceType":"module"}