{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\Components\\\\TextArea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./TextArea.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextArea() {\n  _s();\n\n  const [text, updateText] = useState(\"\");\n  let [numberOfCharacters, updateNumberOfCharacters] = useState(\"0\");\n  let [numberOfWords, updateNumberOfWords] = useState(0);\n\n  let onChangeHandle = e => {\n    updateText(e.target.value);\n    updateNumberOfCharacters(e.target.value.split(\" \").join(\"\").length);\n    updateNumberOfWords(e.target.value.split(\" \").filter(words => words !== \"\").length);\n  };\n\n  let clickToUpperCase = () => {\n    updateText(text.toUpperCase());\n  };\n\n  let clickToLowerCase = () => {\n    updateText(text.toLowerCase());\n  };\n\n  let clickToClear = () => {\n    updateText(\"\");\n  };\n\n  let clickToCopy = () => {\n    navigator.clipboard.writeText(text);\n  };\n\n  let clickToPaste = () => {\n    navigator.clipboard.readText().then(txt => {\n      updateText(txt);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Playing with the text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"text-area\",\n        placeholder: \"Enter your Text\",\n        value: text,\n        onInput: onChangeHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToUpperCase,\n          children: \"Click to change to UpperCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToLowerCase,\n          children: \"Click to change to LowerCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToClear,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToCopy,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clickToPaste,\n          children: \"Paste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numberOfWords\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"The Number of Characters are \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numberOfCharacters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 54\n          }, this), \" and the Number of Words are \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: numberOfWords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 116\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TextArea, \"tIgeoWA4Hnt9HOqohmpThiiowBw=\");\n\n_c = TextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["React","useState","TextArea","text","updateText","numberOfCharacters","updateNumberOfCharacters","numberOfWords","updateNumberOfWords","onChangeHandle","e","target","value","split","join","length","filter","words","clickToUpperCase","toUpperCase","clickToLowerCase","toLowerCase","clickToClear","clickToCopy","navigator","clipboard","writeText","clickToPaste","readText","then","txt"],"sources":["D:/Programming/js-react/src/Components/TextArea.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./TextArea.css\";\r\n\r\nexport default function TextArea() {\r\n    const [text, updateText] = useState(\"\")\r\n    let [numberOfCharacters, updateNumberOfCharacters] = useState(\"0\")\r\n    let [numberOfWords, updateNumberOfWords] = useState(0)\r\n    let onChangeHandle = (e) => {\r\n        updateText(e.target.value)\r\n        updateNumberOfCharacters(e.target.value.split(\" \").join(\"\").length)\r\n        updateNumberOfWords(e.target.value.split(\" \").filter(words => words !== \"\").length)\r\n    }\r\n    let clickToUpperCase = () => {\r\n        updateText(text.toUpperCase());\r\n    }\r\n    let clickToLowerCase = () => {\r\n        updateText(text.toLowerCase());\r\n    }\r\n    let clickToClear=()=>{\r\n        updateText(\"\")\r\n    }\r\n    let clickToCopy=()=>{\r\n        navigator.clipboard.writeText(text)\r\n    }\r\n    let clickToPaste=()=>{\r\n        navigator.clipboard.readText().then((txt)=>{\r\n        updateText(txt);\r\n    });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <strong>Playing with the text</strong>\r\n                <label htmlFor=\"text-area\"></label>\r\n                <textarea id=\"text-area\" placeholder=\"Enter your Text\" value={text} onInput={onChangeHandle}></textarea>\r\n                <div className=\"buttons\">\r\n                    <button onClick={clickToUpperCase}>Click to change to UpperCase</button>\r\n                    <button onClick={clickToLowerCase}>Click to change to LowerCase</button>\r\n                    <button onClick={clickToClear}>Clear All</button>\r\n                    <button onClick={clickToCopy}>Copy</button>\r\n                    <button onClick={clickToPaste}>Paste</button>\r\n                </div>\r\n                <div className=\"numberOfWords\">\r\n                    <h3>The Number of Characters are <span>{numberOfCharacters}</span> and the Number of Words are <span>{numberOfWords}</span></h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAC/B,MAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBH,QAAQ,CAAC,EAAD,CAAnC;EACA,IAAI,CAACI,kBAAD,EAAqBC,wBAArB,IAAiDL,QAAQ,CAAC,GAAD,CAA7D;EACA,IAAI,CAACM,aAAD,EAAgBC,mBAAhB,IAAuCP,QAAQ,CAAC,CAAD,CAAnD;;EACA,IAAIQ,cAAc,GAAIC,CAAD,IAAO;IACxBN,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;IACAN,wBAAwB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB,EAA0BC,IAA1B,CAA+B,EAA/B,EAAmCC,MAApC,CAAxB;IACAP,mBAAmB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB,EAA0BG,MAA1B,CAAiCC,KAAK,IAAIA,KAAK,KAAK,EAApD,EAAwDF,MAAzD,CAAnB;EACH,CAJD;;EAKA,IAAIG,gBAAgB,GAAG,MAAM;IACzBd,UAAU,CAACD,IAAI,CAACgB,WAAL,EAAD,CAAV;EACH,CAFD;;EAGA,IAAIC,gBAAgB,GAAG,MAAM;IACzBhB,UAAU,CAACD,IAAI,CAACkB,WAAL,EAAD,CAAV;EACH,CAFD;;EAGA,IAAIC,YAAY,GAAC,MAAI;IACjBlB,UAAU,CAAC,EAAD,CAAV;EACH,CAFD;;EAGA,IAAImB,WAAW,GAAC,MAAI;IAChBC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BvB,IAA9B;EACH,CAFD;;EAGA,IAAIwB,YAAY,GAAC,MAAI;IACjBH,SAAS,CAACC,SAAV,CAAoBG,QAApB,GAA+BC,IAA/B,CAAqCC,GAAD,IAAO;MAC3C1B,UAAU,CAAC0B,GAAD,CAAV;IACH,CAFG;EAGH,CAJD;;EAMA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,OAAO,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAU,EAAE,EAAC,WAAb;QAAyB,WAAW,EAAC,iBAArC;QAAuD,KAAK,EAAE3B,IAA9D;QAAoE,OAAO,EAAEM;MAA7E;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAK,SAAS,EAAC,SAAf;QAAA,wBACI;UAAQ,OAAO,EAAES,gBAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,OAAO,EAAEE,gBAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAQ,OAAO,EAAEE,YAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAQ,OAAO,EAAEC,WAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAQ,OAAO,EAAEI,YAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAWI;QAAK,SAAS,EAAC,eAAf;QAAA,uBACI;UAAA,yDAAiC;YAAA,UAAOtB;UAAP;YAAA;YAAA;YAAA;UAAA,QAAjC,gDAA+F;YAAA,UAAOE;UAAP;YAAA;YAAA;YAAA;UAAA,QAA/F;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAmBH;;GA9CuBL,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}