{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\js-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Components/Navbar'; // import TextArea from './Components/TextArea';\n\nimport React, { useState } from 'react';\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom'; // import { useHistory } from 'react-router-dom'\n// import { browserHistory } from 'react-router';\n\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //   const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n  //   const [textModeEnabled, updateTextModeEnabled] = useState(\"white\")\n  //   const [modeTextNav, updateModeTextNav] = useState(\"Dark\")\n  //   const [translateXValue, updateTranslateXValue] = useState(\"0px\")\n  //   const [labelBackgroundColor, updateLabelBackgroundColor] = useState(\"#c5d1dc84\")\n  //   const [btnBgColor, updateBtnBgColor] = useState(\"green\")\n  //   const [textColor, updateTextColor] = useState(\"black\")\n  // const [detectCurrentPageUnderline, updateDetectCurrentPageUnderline] = useState(\"none\")\n  const [state, setState] = React.useState({\n    modeEnabled: \"#1F2633\",\n    textModeEnabled: 'white',\n    modeTextNav: 'Dark',\n    translateXValue: '0px',\n    labelBackgroundColor: '#c5d1dc84',\n    btnBgColor: 'green'\n  }); // detectCurrentPageUnderline\n  // const location = useLocation();\n  // useEffect(() => {\n  //   findingCurrentRoutePath();\n  //   console.log(window.location.pathname)\n  // },[window.location.pathname]);\n  // function findingCurrentRoutePath(){\n  // console.log(location.pathname[0])\n  // window.onload=()=>{\n  //   switch (window.location.pathname) {\n  //     case \"/contact\":\n  //       break;\n  //       case \"/\":\n  //         console.log(\"home\")\n  //         // updateDetectCurrentPageUnderline(\"underline\")\n  //         break;\n  //       default:\n  //         // updateDetectCurrentPageUnderline(\"none\")\n  //       }\n  //     }\n  // }\n  // findingCurrentRoutePath();\n  // const detectCurrentPages = \"underline\"\n  // }\n  //Your initialization\n\n  const enableDarkModeOnClick = () => {\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n    switch (setState[0]) {\n      case \"#1F2633\":\n        document.body.style.backgroundColor = \"#1F2633\"; // updateModeEnabled(\"rgb(185, 192, 198)\")\n        // updateTextModeEnabled(\"black\")\n        // updateModeTextNav(\"Light\")\n        // updateTranslateXValue(\"+70%\")\n        // updateLabelBackgroundColor(\"#00D1FF\")\n        // updateBtnBgColor(\"rgb(185, 192, 198)\")\n        // updateTextColor(\"white\")\n\n        break;\n\n      default:\n        document.body.style.backgroundColor = \"white\"; // updateModeEnabled(\"#1F2633\")\n        // updateTextModeEnabled(\"white\")\n        // updateModeTextNav(\"Dark\")\n        // updateTranslateXValue(\"0px\")\n        // updateLabelBackgroundColor(\"#c5d1dc84\")\n        // updateBtnBgColor(\"green\")\n        // updateTextColor(\"black\")\n\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      enableDarkModeOnClick: enableDarkModeOnClick,\n      darkLightModeNav: {\n        backgroundColor: setState(0)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"eJn24dZs4e3phW4A6KAOzk42RZQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","React","useState","Contact","Route","Routes","useEffect","useLocation","App","state","setState","modeEnabled","textModeEnabled","modeTextNav","translateXValue","labelBackgroundColor","btnBgColor","enableDarkModeOnClick","document","body","style","backgroundColor"],"sources":["D:/Programming/js-react/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './Components/Navbar';\n// import TextArea from './Components/TextArea';\nimport React, { useState } from 'react'\nimport Contact from './Components/Contact';\nimport { Route, Routes } from 'react-router-dom';\n// import { useHistory } from 'react-router-dom'\n// import { browserHistory } from 'react-router';\n\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n\nfunction App() {\n//   const [modeEnabled, updateModeEnabled] = useState(\"#1F2633\")\n//   const [textModeEnabled, updateTextModeEnabled] = useState(\"white\")\n//   const [modeTextNav, updateModeTextNav] = useState(\"Dark\")\n//   const [translateXValue, updateTranslateXValue] = useState(\"0px\")\n//   const [labelBackgroundColor, updateLabelBackgroundColor] = useState(\"#c5d1dc84\")\n//   const [btnBgColor, updateBtnBgColor] = useState(\"green\")\n//   const [textColor, updateTextColor] = useState(\"black\")\n  // const [detectCurrentPageUnderline, updateDetectCurrentPageUnderline] = useState(\"none\")\n  const [state, setState] = React.useState({\n    modeEnabled: \"#1F2633\",\n    textModeEnabled: 'white',\n    modeTextNav: 'Dark',\n    translateXValue: '0px',\n    labelBackgroundColor: '#c5d1dc84',\n    btnBgColor: 'green'\n  })\n  // detectCurrentPageUnderline\n  \n  \n  // const location = useLocation();\n\n  // useEffect(() => {\n  //   findingCurrentRoutePath();\n  //   console.log(window.location.pathname)\n  // },[window.location.pathname]);\n\n  // function findingCurrentRoutePath(){\n    // console.log(location.pathname[0])\n    // window.onload=()=>{\n    //   switch (window.location.pathname) {\n    //     case \"/contact\":\n    //       break;\n    //       case \"/\":\n    //         console.log(\"home\")\n    //         // updateDetectCurrentPageUnderline(\"underline\")\n    //         break;\n    //       default:\n    //         // updateDetectCurrentPageUnderline(\"none\")\n  \n    //       }\n    //     }\n  // }\n  \n  // findingCurrentRoutePath();\n  // const detectCurrentPages = \"underline\"\n  // }\n\n  //Your initialization\n  \n\n\n  const enableDarkModeOnClick = () => {\n    // modeEnabled===\"black\"?updateModeEnabled(\"white\"):updateModeEnabled(\"black\")\n\n    switch (setState[0]) {\n      case \"#1F2633\":\n        document.body.style.backgroundColor = \"#1F2633\"\n        // updateModeEnabled(\"rgb(185, 192, 198)\")\n        // updateTextModeEnabled(\"black\")\n        // updateModeTextNav(\"Light\")\n        // updateTranslateXValue(\"+70%\")\n        // updateLabelBackgroundColor(\"#00D1FF\")\n        // updateBtnBgColor(\"rgb(185, 192, 198)\")\n        // updateTextColor(\"white\")\n        break;\n      default:\n        document.body.style.backgroundColor = \"white\"\n        // updateModeEnabled(\"#1F2633\")\n        // updateTextModeEnabled(\"white\")\n        // updateModeTextNav(\"Dark\")\n        // updateTranslateXValue(\"0px\")\n        // updateLabelBackgroundColor(\"#c5d1dc84\")\n        // updateBtnBgColor(\"green\")\n        // updateTextColor(\"black\")\n        break;\n    }\n\n  }\n  return (\n    <>\n      <Navbar enableDarkModeOnClick={enableDarkModeOnClick} darkLightModeNav={{ backgroundColor: setState(0) }}/>\n      {/* <Routes>\n        <Route path=\"/\" element={<TextArea backgroundColorButton={{ backgroundColor: btnBgColor, color: textModeEnabled }} textAreaColor={{ color: textColor }} />}>\n        </Route>\n        <Route path=\"/contact\" element={<Contact textAreaColor={{ color: textColor }} />}>\n        </Route>\n      </Routes> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;AACA;;AAEA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACE;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACC,QAAN,CAAe;IACvCS,WAAW,EAAE,SAD0B;IAEvCC,eAAe,EAAE,OAFsB;IAGvCC,WAAW,EAAE,MAH0B;IAIvCC,eAAe,EAAE,KAJsB;IAKvCC,oBAAoB,EAAE,WALiB;IAMvCC,UAAU,EAAE;EAN2B,CAAf,CAA1B,CATa,CAiBb;EAGA;EAEA;EACA;EACA;EACA;EAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACF;EAEA;EACA;EACA;EAEA;;EAIA,MAAMC,qBAAqB,GAAG,MAAM;IAClC;IAEA,QAAQP,QAAQ,CAAC,CAAD,CAAhB;MACE,KAAK,SAAL;QACEQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC,CADF,CAEE;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;;MACF;QACEH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC,CADF,CAEE;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;IApBJ;EAuBD,CA1BD;;EA2BA,oBACE;IAAA,uBACE,QAAC,MAAD;MAAQ,qBAAqB,EAAEJ,qBAA/B;MAAsD,gBAAgB,EAAE;QAAEI,eAAe,EAAEX,QAAQ,CAAC,CAAD;MAA3B;IAAxE;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAWD;;GA1FQF,G;;KAAAA,G;AA4FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}